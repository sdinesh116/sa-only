pipeline {
    agent any
    parameters {
		string(name: 'SUBSCRIPTION_ID', defaultValue: '', description: 'provide the subscription id'),
		string(name: 'CLIENT_ID', defaultValue: '', description: 'input tag for ansible command.'),
		string(name: 'CLIENT_SECRET', defaultValue: '', description: 'input tag for ansible command.'),
		string(name: 'TENANT_ID', defaultValue: '', description: 'input tag for ansible command.'),
		string(name: 'RESOURCE_GROUP', defaultValue: '', description: 'input tag for ansible command.'),
		string(name: 'LOCATION', defaultValue: '', description: 'provide the location'),
		string(name: 'SANAME', defaultValue: 'SA_NAME', description: 'provide the storage account name')		
	}
   stage('Preparation') {
      git credentialsId: 'git', url: 'https://github.com/sdinesh116/sa-only.git'
	  sh "export PATH=/usr/local/bin/:$PATH"
	  sh "terraform init"

   }
   stage('manipulate the tf files') {
      // manipulate the variables files 
      sh 'sed -ie "s|SUBSCRIPTIONID|$SUBSCRIPTION_ID|g" variables.tf'
      sh 'sed -ie "s|CLIENTID|$CLIENT_ID|g" variables.tf'
      sh 'sed -ie "s|CLIENTSECRET|$CLIENT_SECRET|g" variables.tf'
      sh 'sed -ie "s|TENANTID|$TENANT_ID|g" variables.tf'
	  sh 'sed -ie "s|RESOURCEGROUP|$RESOURCE_GROUP|g" variables.tf'
  	  sh 'sed -ie "s|LOCATION|$LOCATION|g" variables.tf'
  	  sh 'sed -ie "s|SANAME|$SA_NAME|g" variables.tf'
	  sh 'cat variables.tf'
    }
   stage('terrafrom plan') {
      // perfrm the terraform plan
	  sh "terraform plan -out=terraform.plan"
	  sh "cat terraform.plan"
      input 'Continue with the terraform plan ?'
   }
   stage('terrafrom apply') {
      // perfrm the terraform plan 
	  sh "terraform apply -auto-approve"
   }
   }